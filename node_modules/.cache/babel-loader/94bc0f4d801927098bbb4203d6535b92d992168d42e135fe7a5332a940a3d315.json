{"ast":null,"code":"var _jsxFileName = \"/home/merval/projet perso/bible/dailyverse/src/components/BooksTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { ArrowLeft, BookOpen, Highlighter, Bookmark, X } from 'lucide-react';\nimport { doc, setDoc, getDoc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\nimport { auth, db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BooksTab = ({\n  theme,\n  selectedBook,\n  setSelectedBook,\n  selectedChapter,\n  setSelectedChapter,\n  chapterContent,\n  bibleBooks,\n  showAllOldTestament,\n  setShowAllOldTestament,\n  showAllNewTestament,\n  setShowAllNewTestament\n}) => {\n  _s();\n  const [selectedLine, setSelectedLine] = useState(null);\n  const [highlightedLines, setHighlightedLines] = useState({});\n  const [savedLines, setSavedLines] = useState({});\n  const [linePosition, setLinePosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [userId, setUserId] = useState(null);\n  const loadUserData = useCallback(async uid => {\n    if (!uid) return;\n    const userDocRef = doc(db, \"users\", uid);\n    try {\n      const docSnap = await getDoc(userDocRef);\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n\n        // Initialize highlights\n        const highlightsMap = {};\n        if (data.highlights) {\n          data.highlights.forEach(hl => {\n            if (hl.book === selectedBook && hl.chapter === selectedChapter) {\n              highlightsMap[hl.lineNumber] = true;\n            }\n          });\n        }\n        setHighlightedLines(highlightsMap);\n\n        // Initialize bookmarks\n        const bookmarksMap = {};\n        if (data.bookmarks) {\n          data.bookmarks.forEach(bm => {\n            if (bm.book === selectedBook && bm.chapter === selectedChapter) {\n              bookmarksMap[bm.lineNumber] = true;\n            }\n          });\n        }\n        setSavedLines(bookmarksMap);\n      }\n    } catch (error) {\n      console.error(\"Error loading user data:\", error);\n    }\n  }, [selectedBook, selectedChapter]);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUserId(user.uid);\n        loadUserData(user.uid);\n      } else {\n        setUserId(null);\n        setHighlightedLines({});\n        setSavedLines({});\n      }\n    });\n    return () => unsubscribe();\n  }, [loadUserData]);\n  useEffect(() => {\n    if (userId) {\n      loadUserData(userId);\n    }\n  }, [userId, selectedBook, selectedChapter, loadUserData]);\n  const handleLineClick = (lineNumber, event) => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    setLinePosition({\n      top: rect.top - 50,\n      left: rect.left\n    });\n    setSelectedLine(selectedLine === lineNumber ? null : lineNumber);\n  };\n  const handleHighlight = async () => {\n    var _chapterContent$text$;\n    if (selectedLine === null || !userId || !selectedBook || !selectedChapter || !chapterContent) return;\n    const isHighlighted = !highlightedLines[selectedLine];\n    const userDocRef = doc(db, \"users\", userId);\n    const highlightData = {\n      book: selectedBook,\n      chapter: selectedChapter,\n      lineNumber: selectedLine,\n      text: ((_chapterContent$text$ = chapterContent.text.split('\\n')[selectedLine - 1]) === null || _chapterContent$text$ === void 0 ? void 0 : _chapterContent$text$.trim()) || '',\n      reference: `${selectedBook} ${selectedChapter}:${selectedLine}`,\n      timestamp: new Date()\n    };\n    try {\n      if (isHighlighted) {\n        await updateDoc(userDocRef, {\n          highlights: arrayUnion(highlightData)\n        });\n      } else {\n        await updateDoc(userDocRef, {\n          highlights: arrayRemove(highlightData)\n        });\n      }\n      setHighlightedLines(prev => ({\n        ...prev,\n        [selectedLine]: isHighlighted\n      }));\n      setSelectedLine(null);\n    } catch (error) {\n      console.error(\"Error updating highlight:\", error);\n    }\n  };\n  const handleSave = async () => {\n    var _chapterContent$text$2, _chapterContent$text$3;\n    if (selectedLine === null || !userId || !selectedBook || !selectedChapter || !chapterContent) return;\n    const isSaved = !savedLines[selectedLine];\n    const userDocRef = doc(db, \"users\", userId);\n    const bookmarkData = {\n      book: selectedBook,\n      chapter: selectedChapter,\n      lineNumber: selectedLine,\n      text: ((_chapterContent$text$2 = chapterContent.text.split('\\n')[selectedLine - 1]) === null || _chapterContent$text$2 === void 0 ? void 0 : _chapterContent$text$2.trim()) || '',\n      preview: (((_chapterContent$text$3 = chapterContent.text.split('\\n')[selectedLine - 1]) === null || _chapterContent$text$3 === void 0 ? void 0 : _chapterContent$text$3.trim()) || '').substring(0, 50) + '...',\n      reference: `${selectedBook} ${selectedChapter}:${selectedLine}`,\n      timestamp: new Date()\n    };\n    try {\n      if (isSaved) {\n        await updateDoc(userDocRef, {\n          bookmarks: arrayUnion(bookmarkData)\n        });\n      } else {\n        await updateDoc(userDocRef, {\n          bookmarks: arrayRemove(bookmarkData)\n        });\n      }\n      setSavedLines(prev => ({\n        ...prev,\n        [selectedLine]: isSaved\n      }));\n      setSelectedLine(null);\n    } catch (error) {\n      console.error(\"Error updating bookmark:\", error);\n    }\n  };\n\n  // Rest of your component remains the same...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${theme.card} rounded shadow p-4 position-relative`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(BooksTab, \"PEYlrAqjAWVlVIBy8rFQ7olMF/4=\");\n_c = BooksTab;\nexport default BooksTab;\nvar _c;\n$RefreshReg$(_c, \"BooksTab\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ArrowLeft","BookOpen","Highlighter","Bookmark","X","doc","setDoc","getDoc","updateDoc","arrayUnion","arrayRemove","auth","db","jsxDEV","_jsxDEV","BooksTab","theme","selectedBook","setSelectedBook","selectedChapter","setSelectedChapter","chapterContent","bibleBooks","showAllOldTestament","setShowAllOldTestament","showAllNewTestament","setShowAllNewTestament","_s","selectedLine","setSelectedLine","highlightedLines","setHighlightedLines","savedLines","setSavedLines","linePosition","setLinePosition","top","left","userId","setUserId","loadUserData","uid","userDocRef","docSnap","exists","data","highlightsMap","highlights","forEach","hl","book","chapter","lineNumber","bookmarksMap","bookmarks","bm","error","console","unsubscribe","onAuthStateChanged","user","handleLineClick","event","rect","currentTarget","getBoundingClientRect","handleHighlight","_chapterContent$text$","isHighlighted","highlightData","text","split","trim","reference","timestamp","Date","prev","handleSave","_chapterContent$text$2","_chapterContent$text$3","isSaved","bookmarkData","preview","substring","className","card","fileName","_jsxFileName","columnNumber","_c","$RefreshReg$"],"sources":["/home/merval/projet perso/bible/dailyverse/src/components/BooksTab.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ArrowLeft, BookOpen, Highlighter, Bookmark, X } from 'lucide-react';\nimport { doc, setDoc, getDoc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\nimport { auth, db } from '../firebase';\n\nconst BooksTab = ({ \n  theme, \n  selectedBook, \n  setSelectedBook, \n  selectedChapter, \n  setSelectedChapter, \n  chapterContent, \n  bibleBooks, \n  showAllOldTestament, \n  setShowAllOldTestament, \n  showAllNewTestament, \n  setShowAllNewTestament \n}) => {\n  const [selectedLine, setSelectedLine] = useState(null);\n  const [highlightedLines, setHighlightedLines] = useState({});\n  const [savedLines, setSavedLines] = useState({});\n  const [linePosition, setLinePosition] = useState({ top: 0, left: 0 });\n  const [userId, setUserId] = useState(null);\n\n  const loadUserData = useCallback(async (uid) => {\n    if (!uid) return;\n    \n    const userDocRef = doc(db, \"users\", uid);\n    try {\n      const docSnap = await getDoc(userDocRef);\n      \n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        \n        // Initialize highlights\n        const highlightsMap = {};\n        if (data.highlights) {\n          data.highlights.forEach(hl => {\n            if (hl.book === selectedBook && hl.chapter === selectedChapter) {\n              highlightsMap[hl.lineNumber] = true;\n            }\n          });\n        }\n        setHighlightedLines(highlightsMap);\n        \n        // Initialize bookmarks\n        const bookmarksMap = {};\n        if (data.bookmarks) {\n          data.bookmarks.forEach(bm => {\n            if (bm.book === selectedBook && bm.chapter === selectedChapter) {\n              bookmarksMap[bm.lineNumber] = true;\n            }\n          });\n        }\n        setSavedLines(bookmarksMap);\n      }\n    } catch (error) {\n      console.error(\"Error loading user data:\", error);\n    }\n  }, [selectedBook, selectedChapter]);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUserId(user.uid);\n        loadUserData(user.uid);\n      } else {\n        setUserId(null);\n        setHighlightedLines({});\n        setSavedLines({});\n      }\n    });\n    return () => unsubscribe();\n  }, [loadUserData]);\n\n  useEffect(() => {\n    if (userId) {\n      loadUserData(userId);\n    }\n  }, [userId, selectedBook, selectedChapter, loadUserData]);\n\n  const handleLineClick = (lineNumber, event) => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    setLinePosition({\n      top: rect.top - 50,\n      left: rect.left\n    });\n    setSelectedLine(selectedLine === lineNumber ? null : lineNumber);\n  };\n\n  const handleHighlight = async () => {\n    if (selectedLine === null || !userId || !selectedBook || !selectedChapter || !chapterContent) return;\n    \n    const isHighlighted = !highlightedLines[selectedLine];\n    const userDocRef = doc(db, \"users\", userId);\n    const highlightData = {\n      book: selectedBook,\n      chapter: selectedChapter,\n      lineNumber: selectedLine,\n      text: chapterContent.text.split('\\n')[selectedLine - 1]?.trim() || '',\n      reference: `${selectedBook} ${selectedChapter}:${selectedLine}`,\n      timestamp: new Date()\n    };\n\n    try {\n      if (isHighlighted) {\n        await updateDoc(userDocRef, {\n          highlights: arrayUnion(highlightData)\n        });\n      } else {\n        await updateDoc(userDocRef, {\n          highlights: arrayRemove(highlightData)\n        });\n      }\n      \n      setHighlightedLines(prev => ({\n        ...prev,\n        [selectedLine]: isHighlighted\n      }));\n      setSelectedLine(null);\n    } catch (error) {\n      console.error(\"Error updating highlight:\", error);\n    }\n  };\n\n  const handleSave = async () => {\n    if (selectedLine === null || !userId || !selectedBook || !selectedChapter || !chapterContent) return;\n    \n    const isSaved = !savedLines[selectedLine];\n    const userDocRef = doc(db, \"users\", userId);\n    const bookmarkData = {\n      book: selectedBook,\n      chapter: selectedChapter,\n      lineNumber: selectedLine,\n      text: chapterContent.text.split('\\n')[selectedLine - 1]?.trim() || '',\n      preview: (chapterContent.text.split('\\n')[selectedLine - 1]?.trim() || '').substring(0, 50) + '...',\n      reference: `${selectedBook} ${selectedChapter}:${selectedLine}`,\n      timestamp: new Date()\n    };\n\n    try {\n      if (isSaved) {\n        await updateDoc(userDocRef, {\n          bookmarks: arrayUnion(bookmarkData)\n        });\n      } else {\n        await updateDoc(userDocRef, {\n          bookmarks: arrayRemove(bookmarkData)\n        });\n      }\n      \n      setSavedLines(prev => ({\n        ...prev,\n        [selectedLine]: isSaved\n      }));\n      setSelectedLine(null);\n    } catch (error) {\n      console.error(\"Error updating bookmark:\", error);\n    }\n  };\n\n  // Rest of your component remains the same...\n  return (\n    <div className={`${theme.card} rounded shadow p-4 position-relative`}>\n      {/* ... (keep all your existing JSX code) ... */}\n    </div>\n  );\n};\n\nexport default BooksTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}