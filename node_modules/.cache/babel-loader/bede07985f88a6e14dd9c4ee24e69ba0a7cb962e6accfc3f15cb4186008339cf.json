{"ast":null,"code":"var _jsxFileName = \"/home/merval/projet perso/bible/BibleSnap/dailyverse/src/components/HomeTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getVerseOfDay } from './services/bibleService';\nimport HomeTab from './components/HomeTab';\n// Import other components as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [verseOfDay, setVerseOfDay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [bookmarks, setBookmarks] = useState([]);\n\n  // Theme settings\n  const theme = {\n    card: 'bg-white',\n    subtleText: 'text-muted',\n    accentText: 'text-primary',\n    subtleBtn: 'btn-outline-secondary'\n  };\n\n  // Function to fetch verse of the day in specified language\n  const fetchVerseOfDay = async (language = 'en') => {\n    try {\n      setLoading(true);\n      const verse = await getVerseOfDay(language);\n      setVerseOfDay(verse);\n    } catch (error) {\n      console.error('Error fetching verse of the day:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add bookmark\n  const addBookmark = (reference, text) => {\n    setBookmarks(prev => [...prev, {\n      reference,\n      text,\n      timestamp: new Date()\n    }]);\n  };\n\n  // Initial fetch on component mount\n  useEffect(() => {\n    fetchVerseOfDay();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(HomeTab, {\n      theme: theme,\n      verseOfDay: verseOfDay,\n      addBookmark: addBookmark,\n      fetchVerseOfDay: fetchVerseOfDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"12FyzeCisjrBkBRMl2eiD85HImg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getVerseOfDay","HomeTab","jsxDEV","_jsxDEV","App","_s","verseOfDay","setVerseOfDay","loading","setLoading","bookmarks","setBookmarks","theme","card","subtleText","accentText","subtleBtn","fetchVerseOfDay","language","verse","error","console","addBookmark","reference","text","prev","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/merval/projet perso/bible/BibleSnap/dailyverse/src/components/HomeTab.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getVerseOfDay } from './services/bibleService';\nimport HomeTab from './components/HomeTab';\n// Import other components as needed\n\nfunction App() {\n  const [verseOfDay, setVerseOfDay] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [bookmarks, setBookmarks] = useState([]);\n  \n  // Theme settings\n  const theme = {\n    card: 'bg-white',\n    subtleText: 'text-muted',\n    accentText: 'text-primary',\n    subtleBtn: 'btn-outline-secondary'\n  };\n\n  // Function to fetch verse of the day in specified language\n  const fetchVerseOfDay = async (language = 'en') => {\n    try {\n      setLoading(true);\n      const verse = await getVerseOfDay(language);\n      setVerseOfDay(verse);\n    } catch (error) {\n      console.error('Error fetching verse of the day:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add bookmark\n  const addBookmark = (reference, text) => {\n    setBookmarks(prev => [...prev, { reference, text, timestamp: new Date() }]);\n  };\n\n  // Initial fetch on component mount\n  useEffect(() => {\n    fetchVerseOfDay();\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      {/* Other components */}\n      \n      <HomeTab \n        theme={theme}\n        verseOfDay={verseOfDay}\n        addBookmark={addBookmark}\n        fetchVerseOfDay={fetchVerseOfDay}\n      />\n      \n      {/* Other components */}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMc,KAAK,GAAG;IACZC,IAAI,EAAE,UAAU;IAChBC,UAAU,EAAE,YAAY;IACxBC,UAAU,EAAE,cAAc;IAC1BC,SAAS,EAAE;EACb,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG,MAAAA,CAAOC,QAAQ,GAAG,IAAI,KAAK;IACjD,IAAI;MACFT,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMU,KAAK,GAAG,MAAMnB,aAAa,CAACkB,QAAQ,CAAC;MAC3CX,aAAa,CAACY,KAAK,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMa,WAAW,GAAGA,CAACC,SAAS,EAAEC,IAAI,KAAK;IACvCb,YAAY,CAACc,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEF,SAAS;MAAEC,IAAI;MAAEE,SAAS,EAAE,IAAIC,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EAC7E,CAAC;;EAED;EACA5B,SAAS,CAAC,MAAM;IACdkB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAG5B1B,OAAA,CAACF,OAAO;MACNW,KAAK,EAAEA,KAAM;MACbN,UAAU,EAAEA,UAAW;MACvBgB,WAAW,EAAEA,WAAY;MACzBL,eAAe,EAAEA;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAEV;AAAC5B,EAAA,CAlDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}