{"ast":null,"code":"var _jsxFileName = \"/home/merval/projet perso/bible/BibleSnap/dailyverse/src/components/NotesTab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Edit, X, Save, Plus, Bold, Italic, Underline, List, AlignLeft, AlignCenter, AlignRight } from 'lucide-react';\nimport { doc, onSnapshot, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesTab = ({\n  theme,\n  darkMode\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [editingNoteIndex, setEditingNoteIndex] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [selectedColor, setSelectedColor] = useState('#ffffff');\n  const [userId, setUserId] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const editorRef = useRef(null);\n  const modalRef = useRef(null);\n\n  // Adjusted color palette for better dark mode compatibility\n  const colorOptions = [{\n    name: 'White',\n    value: darkMode ? '#2c2c2c' : '#ffffff'\n  }, {\n    name: 'Pastel Pink',\n    value: darkMode ? '#4e3636' : '#ffcccb'\n  }, {\n    name: 'Pastel Blue',\n    value: darkMode ? '#2b3a4a' : '#D0A280'\n  }, {\n    name: 'Pastel Yellow',\n    value: darkMode ? '#4e4a30' : '#ffffcc'\n  }, {\n    name: 'Pastel Green',\n    value: darkMode ? '#304a33' : '#ccffcc'\n  }, {\n    name: 'Pastel Purple',\n    value: darkMode ? '#3d304a' : '#e6ccff'\n  }];\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUserId(user.uid);\n        const userDoc = doc(db, 'users', user.uid);\n        onSnapshot(userDoc, snapshot => {\n          const data = snapshot.data();\n          setNotes((data === null || data === void 0 ? void 0 : data.notes) || []);\n        });\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (showModal && modalRef.current && !modalRef.current.contains(e.target)) {\n        closeEditor();\n      }\n    };\n    if (showModal) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showModal]);\n\n  // Effect to update color when dark mode changes\n  useEffect(() => {\n    // Update selected color when dark mode changes\n    if (editingNoteIndex !== null && notes[editingNoteIndex]) {\n      const currentColor = notes[editingNoteIndex].color;\n      const matchingColor = colorOptions.find(c => darkMode && isDarkModeEquivalent(c.value, currentColor) || !darkMode && isLightModeEquivalent(c.value, currentColor));\n      if (matchingColor) {\n        setSelectedColor(matchingColor.value);\n      }\n    } else {\n      // Default to first color option when creating new note\n      setSelectedColor(colorOptions[0].value);\n    }\n  }, [darkMode, editingNoteIndex, notes]);\n\n  // Helper function to check if colors are dark mode equivalents\n  const isDarkModeEquivalent = (darkColor, lightColor) => {\n    // Map between dark and light colors\n    const colorMap = {\n      '#2c2c2c': '#ffffff',\n      '#4e3636': '#ffcccb',\n      '#2b3a4a': '#D0A280',\n      '#4e4a30': '#ffffcc',\n      '#304a33': '#ccffcc',\n      '#3d304a': '#e6ccff'\n    };\n    return colorMap[darkColor] === lightColor;\n  };\n\n  // Helper function to check if colors are light mode equivalents\n  const isLightModeEquivalent = (lightColor, darkColor) => {\n    // Map between light and dark colors\n    const colorMap = {\n      '#ffffff': '#2c2c2c',\n      '#ffcccb': '#4e3636',\n      '#D0A280': '#2b3a4a',\n      '#ffffcc': '#4e4a30',\n      '#ccffcc': '#304a33',\n      '#e6ccff': '#3d304a'\n    };\n    return colorMap[lightColor] === darkColor;\n  };\n\n  // Function to convert color between dark and light mode\n  const convertColor = color => {\n    const darkToLight = {\n      '#2c2c2c': '#ffffff',\n      '#4e3636': '#ffcccb',\n      '#2b3a4a': '#D0A280',\n      '#4e4a30': '#ffffcc',\n      '#304a33': '#ccffcc',\n      '#3d304a': '#e6ccff'\n    };\n    const lightToDark = {\n      '#ffffff': '#2c2c2c',\n      '#ffcccb': '#4e3636',\n      '#D0A280': '#2b3a4a',\n      '#ffffcc': '#4e4a30',\n      '#ccffcc': '#304a33',\n      '#e6ccff': '#3d304a'\n    };\n    return darkMode ? lightToDark[color] || color : darkToLight[color] || color;\n  };\n\n  // Improved function to extract only the first line of content\n  const getFirstLine = htmlContent => {\n    if (!htmlContent) return '';\n\n    // Create a temporary div to parse HTML\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = htmlContent;\n\n    // Get text content\n    const textContent = tempDiv.textContent || tempDiv.innerText || '';\n\n    // Get only the first line (split by line breaks)\n    const firstLine = textContent.split('\\n')[0].trim();\n\n    // Return first line with ellipsis if needed\n    return firstLine.length > 100 ? firstLine.substring(0, 100) + '...' : firstLine;\n  };\n  const openNoteEditor = (note = {}, index = null) => {\n    setEditingNoteIndex(index);\n    setEditedTitle(note.title || '');\n\n    // Convert color to current mode if needed\n    let noteColor = note.color || colorOptions[0].value;\n    setSelectedColor(noteColor);\n\n    // Set modal to visible first\n    setShowModal(true);\n\n    // Wait for modal to be rendered before setting innerHTML\n    setTimeout(() => {\n      if (editorRef.current) {\n        editorRef.current.innerHTML = note.content || '';\n      }\n    }, 10);\n  };\n  const closeEditor = () => {\n    // Force modal to close immediately\n    setShowModal(false);\n\n    // Reset other states after a small delay\n    setTimeout(() => {\n      setEditingNoteIndex(null);\n      setEditedTitle('');\n      if (editorRef.current) editorRef.current.innerHTML = '';\n    }, 100);\n  };\n  const saveNote = async () => {\n    if (!userId || !editorRef.current) return;\n    try {\n      const content = editorRef.current.innerHTML.replace(/<div><br><\\/div>/g, '<br>');\n      const note = {\n        title: editedTitle || 'Untitled Note',\n        content,\n        color: selectedColor,\n        date: new Date().toLocaleDateString(),\n        lastEdited: new Date().toISOString()\n      };\n      const userDoc = doc(db, 'users', userId);\n\n      // First close the modal to ensure UI feedback is immediate\n      setShowModal(false);\n      if (editingNoteIndex === null) {\n        await updateDoc(userDoc, {\n          notes: arrayUnion(note)\n        });\n      } else {\n        const newNotes = [...notes];\n        newNotes[editingNoteIndex] = note;\n        await updateDoc(userDoc, {\n          notes: newNotes\n        });\n      }\n\n      // Then reset the other states\n      setTimeout(() => {\n        setEditingNoteIndex(null);\n        setEditedTitle('');\n        if (editorRef.current) editorRef.current.innerHTML = '';\n      }, 100);\n    } catch (error) {\n      console.error(\"Error saving note:\", error);\n      alert(\"Failed to save note. Please try again.\");\n      // If there's an error, reopen the modal\n      setShowModal(true);\n    }\n  };\n  const deleteNote = async index => {\n    if (!userId) return;\n    try {\n      const userDoc = doc(db, 'users', userId);\n      const noteToDelete = notes[index];\n      await updateDoc(userDoc, {\n        notes: arrayRemove(noteToDelete)\n      });\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n      alert(\"Failed to delete note. Please try again.\");\n    }\n  };\n  const applyFormatting = (command, value = null) => {\n    document.execCommand(command, false, value);\n    editorRef.current.focus();\n  };\n\n  // Determine text color based on background color\n  const getTextColor = backgroundColor => {\n    // For dark mode, ensure text has good contrast\n    const r = parseInt(backgroundColor.slice(1, 3), 16);\n    const g = parseInt(backgroundColor.slice(3, 5), 16);\n    const b = parseInt(backgroundColor.slice(5, 7), 16);\n\n    // Calculate luminance - better formula for perceived brightness\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n\n  // Get display color for a note based on current mode\n  const getNoteDisplayColor = noteColor => {\n    // If we're in dark mode, and the note was saved in light mode,\n    // convert the color to its dark mode equivalent\n    if (darkMode && !noteColor.startsWith('#3') && !noteColor.startsWith('#2') && !noteColor.startsWith('#4')) {\n      return convertColor(noteColor);\n    }\n    // If we're in light mode, and the note was saved in dark mode,\n    // convert the color to its light mode equivalent\n    if (!darkMode && (noteColor.startsWith('#3') || noteColor.startsWith('#2') || noteColor.startsWith('#4'))) {\n      return convertColor(noteColor);\n    }\n    return noteColor;\n  };\n  const getBorderStyle = btnStyle => {\n    return darkMode ? {\n      borderColor: 'rgba(255, 255, 255, 0.2)'\n    } : {\n      borderColor: 'rgba(0, 0, 0, 0.2)'\n    };\n  };\n  const getBtnClass = () => {\n    return darkMode ? \"btn-outline-light\" : \"btn-outline-secondary\";\n  };\n  const getModalOverlayStyle = () => {\n    return {\n      backgroundColor: darkMode ? 'rgba(0,0,0,0.7)' : 'rgba(0,0,0,0.5)',\n      zIndex: 1050\n    };\n  };\n  const getInputStyle = () => {\n    return darkMode ? {\n      backgroundColor: 'rgba(255, 255, 255, 0.1)',\n      color: '#fff',\n      borderColor: 'rgba(255, 255, 255, 0.2)'\n    } : {};\n  };\n  const getEditorStyle = () => {\n    return {\n      minHeight: 150,\n      border: darkMode ? '1px solid rgba(255, 255, 255, 0.2)' : '1px solid #ddd',\n      padding: 10,\n      backgroundColor: darkMode ? '#333' : 'white',\n      color: darkMode ? '#fff' : '#000'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${theme.card} rounded shadow p-4`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"h4 fw-semibold\",\n        children: \"Your Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${darkMode ? 'btn-outline-light' : 'btn-primary'} btn-sm d-flex align-items-center`,\n        onClick: () => openNoteEditor(),\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          size: 16,\n          className: \"me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), \" Add Note\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column gap-3\",\n      children: notes.length ? notes.map((note, index) => {\n        const displayColor = getNoteDisplayColor(note.color);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 rounded shadow-sm\",\n          style: {\n            backgroundColor: displayColor,\n            color: getTextColor(displayColor)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"fw-bold mb-0\",\n                children: note.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `small ${darkMode ? 'text-light' : 'text-muted'} opacity-75`,\n                children: note.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-sm ${darkMode ? 'btn-dark' : 'btn-light'} shadow-sm`,\n                onClick: () => openNoteEditor(note, index),\n                children: /*#__PURE__*/_jsxDEV(Edit, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-sm ${darkMode ? 'btn-dark' : 'btn-light'} shadow-sm`,\n                onClick: () => deleteNote(index),\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2\",\n            children: getFirstLine(note.content)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"No notes yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center\",\n      style: getModalOverlayStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded p-4 shadow-lg\",\n        style: {\n          width: '90%',\n          maxWidth: '700px',\n          backgroundColor: selectedColor,\n          color: getTextColor(selectedColor)\n        },\n        ref: modalRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"m-0\",\n            children: \"Edit Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${darkMode ? 'btn-dark' : 'btn-light'} shadow-sm`,\n            onClick: closeEditor,\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editedTitle,\n            onChange: e => setEditedTitle(e.target.value),\n            placeholder: \"Note Title\",\n            style: getInputStyle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 d-flex gap-2\",\n          children: colorOptions.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSelectedColor(color.value),\n            style: {\n              backgroundColor: color.value,\n              width: 30,\n              height: 30,\n              borderRadius: '50%',\n              border: selectedColor === color.value ? darkMode ? '2px solid white' : '2px solid black' : darkMode ? '1px solid rgba(255,255,255,0.5)' : '1px solid gray',\n              cursor: 'pointer',\n              boxShadow: darkMode ? '0 0 5px rgba(255,255,255,0.2)' : '0 0 5px rgba(0,0,0,0.1)'\n            },\n            title: color.name\n          }, color.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${getBtnClass()}`,\n            onClick: () => applyFormatting('bold'),\n            style: getBorderStyle(),\n            children: /*#__PURE__*/_jsxDEV(Bold, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${getBtnClass()}`,\n            onClick: () => applyFormatting('italic'),\n            style: getBorderStyle(),\n            children: /*#__PURE__*/_jsxDEV(Italic, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${getBtnClass()}`,\n            onClick: () => applyFormatting('underline'),\n            style: getBorderStyle(),\n            children: /*#__PURE__*/_jsxDEV(Underline, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${getBtnClass()}`,\n            onClick: () => applyFormatting('insertUnorderedList'),\n            style: getBorderStyle(),\n            children: /*#__PURE__*/_jsxDEV(List, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${getBtnClass()}`,\n            onClick: () => applyFormatting('justifyLeft'),\n            style: getBorderStyle(),\n            children: /*#__PURE__*/_jsxDEV(AlignLeft, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${getBtnClass()}`,\n            onClick: () => applyFormatting('justifyCenter'),\n            style: getBorderStyle(),\n            children: /*#__PURE__*/_jsxDEV(AlignCenter, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-sm ${getBtnClass()}`,\n            onClick: () => applyFormatting('justifyRight'),\n            style: getBorderStyle(),\n            children: /*#__PURE__*/_jsxDEV(AlignRight, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control notepad-container mb-3\",\n          contentEditable: true,\n          ref: editorRef,\n          style: getEditorStyle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${darkMode ? 'btn-dark' : 'btn-secondary'}`,\n            onClick: closeEditor,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${darkMode ? 'btn-light text-dark' : 'btn-primary'}`,\n            onClick: saveNote,\n            children: [/*#__PURE__*/_jsxDEV(Save, {\n              size: 16,\n              className: \"me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), \" Save\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesTab, \"3/68l7dAqMjWWaJrsL4lboV7pi8=\");\n_c = NotesTab;\nexport default NotesTab;\nvar _c;\n$RefreshReg$(_c, \"NotesTab\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Edit","X","Save","Plus","Bold","Italic","Underline","List","AlignLeft","AlignCenter","AlignRight","doc","onSnapshot","updateDoc","arrayUnion","arrayRemove","auth","db","jsxDEV","_jsxDEV","NotesTab","theme","darkMode","_s","notes","setNotes","editingNoteIndex","setEditingNoteIndex","editedTitle","setEditedTitle","selectedColor","setSelectedColor","userId","setUserId","showModal","setShowModal","editorRef","modalRef","colorOptions","name","value","unsubscribe","onAuthStateChanged","user","uid","userDoc","snapshot","data","handleClickOutside","e","current","contains","target","closeEditor","document","addEventListener","removeEventListener","currentColor","color","matchingColor","find","c","isDarkModeEquivalent","isLightModeEquivalent","darkColor","lightColor","colorMap","convertColor","darkToLight","lightToDark","getFirstLine","htmlContent","tempDiv","createElement","innerHTML","textContent","innerText","firstLine","split","trim","length","substring","openNoteEditor","note","index","title","noteColor","setTimeout","content","saveNote","replace","date","Date","toLocaleDateString","lastEdited","toISOString","newNotes","error","console","alert","deleteNote","noteToDelete","applyFormatting","command","execCommand","focus","getTextColor","backgroundColor","r","parseInt","slice","g","b","luminance","getNoteDisplayColor","startsWith","getBorderStyle","btnStyle","borderColor","getBtnClass","getModalOverlayStyle","zIndex","getInputStyle","getEditorStyle","minHeight","border","padding","className","card","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","map","displayColor","style","width","maxWidth","ref","type","onChange","placeholder","height","borderRadius","cursor","boxShadow","contentEditable","_c","$RefreshReg$"],"sources":["/home/merval/projet perso/bible/BibleSnap/dailyverse/src/components/NotesTab.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Edit, X, Save, Plus, Bold, Italic, Underline, List, AlignLeft, AlignCenter, AlignRight } from 'lucide-react';\nimport { doc, onSnapshot, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\n\nconst NotesTab = ({ theme, darkMode }) => {\n  const [notes, setNotes] = useState([]);\n  const [editingNoteIndex, setEditingNoteIndex] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [selectedColor, setSelectedColor] = useState('#ffffff');\n  const [userId, setUserId] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const editorRef = useRef(null);\n  const modalRef = useRef(null);\n\n  // Adjusted color palette for better dark mode compatibility\n  const colorOptions = [\n    { name: 'White', value: darkMode ? '#2c2c2c' : '#ffffff' },\n    { name: 'Pastel Pink', value: darkMode ? '#4e3636' : '#ffcccb' },\n    { name: 'Pastel Blue', value: darkMode ? '#2b3a4a' : '#D0A280' },\n    { name: 'Pastel Yellow', value: darkMode ? '#4e4a30' : '#ffffcc' },\n    { name: 'Pastel Green', value: darkMode ? '#304a33' : '#ccffcc' },\n    { name: 'Pastel Purple', value: darkMode ? '#3d304a' : '#e6ccff' }\n  ];\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUserId(user.uid);\n        const userDoc = doc(db, 'users', user.uid);\n        onSnapshot(userDoc, snapshot => {\n          const data = snapshot.data();\n          setNotes(data?.notes || []);\n        });\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (showModal && modalRef.current && !modalRef.current.contains(e.target)) {\n        closeEditor();\n      }\n    };\n\n    if (showModal) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showModal]);\n\n  // Effect to update color when dark mode changes\n  useEffect(() => {\n    // Update selected color when dark mode changes\n    if (editingNoteIndex !== null && notes[editingNoteIndex]) {\n      const currentColor = notes[editingNoteIndex].color;\n      const matchingColor = colorOptions.find(c => \n        (darkMode && isDarkModeEquivalent(c.value, currentColor)) || \n        (!darkMode && isLightModeEquivalent(c.value, currentColor))\n      );\n      if (matchingColor) {\n        setSelectedColor(matchingColor.value);\n      }\n    } else {\n      // Default to first color option when creating new note\n      setSelectedColor(colorOptions[0].value);\n    }\n  }, [darkMode, editingNoteIndex, notes]);\n\n  // Helper function to check if colors are dark mode equivalents\n  const isDarkModeEquivalent = (darkColor, lightColor) => {\n    // Map between dark and light colors\n    const colorMap = {\n      '#2c2c2c': '#ffffff',\n      '#4e3636': '#ffcccb',\n      '#2b3a4a': '#D0A280',\n      '#4e4a30': '#ffffcc',\n      '#304a33': '#ccffcc',\n      '#3d304a': '#e6ccff'\n    };\n    return colorMap[darkColor] === lightColor;\n  };\n\n  // Helper function to check if colors are light mode equivalents\n  const isLightModeEquivalent = (lightColor, darkColor) => {\n    // Map between light and dark colors\n    const colorMap = {\n      '#ffffff': '#2c2c2c',\n      '#ffcccb': '#4e3636',\n      '#D0A280': '#2b3a4a',\n      '#ffffcc': '#4e4a30',\n      '#ccffcc': '#304a33',\n      '#e6ccff': '#3d304a'\n    };\n    return colorMap[lightColor] === darkColor;\n  };\n\n  // Function to convert color between dark and light mode\n  const convertColor = (color) => {\n    const darkToLight = {\n      '#2c2c2c': '#ffffff',\n      '#4e3636': '#ffcccb',\n      '#2b3a4a': '#D0A280',\n      '#4e4a30': '#ffffcc',\n      '#304a33': '#ccffcc',\n      '#3d304a': '#e6ccff'\n    };\n    \n    const lightToDark = {\n      '#ffffff': '#2c2c2c',\n      '#ffcccb': '#4e3636',\n      '#D0A280': '#2b3a4a',\n      '#ffffcc': '#4e4a30',\n      '#ccffcc': '#304a33',\n      '#e6ccff': '#3d304a'\n    };\n    \n    return darkMode ? (lightToDark[color] || color) : (darkToLight[color] || color);\n  };\n\n  // Improved function to extract only the first line of content\n  const getFirstLine = (htmlContent) => {\n    if (!htmlContent) return '';\n    \n    // Create a temporary div to parse HTML\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = htmlContent;\n    \n    // Get text content\n    const textContent = tempDiv.textContent || tempDiv.innerText || '';\n    \n    // Get only the first line (split by line breaks)\n    const firstLine = textContent.split('\\n')[0].trim();\n    \n    // Return first line with ellipsis if needed\n    return firstLine.length > 100 ? firstLine.substring(0, 100) + '...' : firstLine;\n  };\n\n  const openNoteEditor = (note = {}, index = null) => {\n    setEditingNoteIndex(index);\n    setEditedTitle(note.title || '');\n    \n    // Convert color to current mode if needed\n    let noteColor = note.color || colorOptions[0].value;\n    setSelectedColor(noteColor);\n    \n    // Set modal to visible first\n    setShowModal(true);\n    \n    // Wait for modal to be rendered before setting innerHTML\n    setTimeout(() => {\n      if (editorRef.current) {\n        editorRef.current.innerHTML = note.content || '';\n      }\n    }, 10);\n  };\n\n  const closeEditor = () => {\n    // Force modal to close immediately\n    setShowModal(false);\n    \n    // Reset other states after a small delay\n    setTimeout(() => {\n      setEditingNoteIndex(null);\n      setEditedTitle('');\n      if (editorRef.current) editorRef.current.innerHTML = '';\n    }, 100);\n  };\n\n  const saveNote = async () => {\n    if (!userId || !editorRef.current) return;\n    \n    try {\n      const content = editorRef.current.innerHTML.replace(/<div><br><\\/div>/g, '<br>');\n      const note = {\n        title: editedTitle || 'Untitled Note',\n        content,\n        color: selectedColor,\n        date: new Date().toLocaleDateString(),\n        lastEdited: new Date().toISOString()\n      };\n\n      const userDoc = doc(db, 'users', userId);\n\n      // First close the modal to ensure UI feedback is immediate\n      setShowModal(false);\n\n      if (editingNoteIndex === null) {\n        await updateDoc(userDoc, {\n          notes: arrayUnion(note)\n        });\n      } else {\n        const newNotes = [...notes];\n        newNotes[editingNoteIndex] = note;\n\n        await updateDoc(userDoc, {\n          notes: newNotes\n        });\n      }\n      \n      // Then reset the other states\n      setTimeout(() => {\n        setEditingNoteIndex(null);\n        setEditedTitle('');\n        if (editorRef.current) editorRef.current.innerHTML = '';\n      }, 100);\n    } catch (error) {\n      console.error(\"Error saving note:\", error);\n      alert(\"Failed to save note. Please try again.\");\n      // If there's an error, reopen the modal\n      setShowModal(true);\n    }\n  };\n\n  const deleteNote = async (index) => {\n    if (!userId) return;\n    try {\n      const userDoc = doc(db, 'users', userId);\n      const noteToDelete = notes[index];\n      await updateDoc(userDoc, {\n        notes: arrayRemove(noteToDelete)\n      });\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n      alert(\"Failed to delete note. Please try again.\");\n    }\n  };\n\n  const applyFormatting = (command, value = null) => {\n    document.execCommand(command, false, value);\n    editorRef.current.focus();\n  };\n\n  // Determine text color based on background color\n  const getTextColor = (backgroundColor) => {\n    // For dark mode, ensure text has good contrast\n    const r = parseInt(backgroundColor.slice(1, 3), 16);\n    const g = parseInt(backgroundColor.slice(3, 5), 16);\n    const b = parseInt(backgroundColor.slice(5, 7), 16);\n    \n    // Calculate luminance - better formula for perceived brightness\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n    \n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n\n  // Get display color for a note based on current mode\n  const getNoteDisplayColor = (noteColor) => {\n    // If we're in dark mode, and the note was saved in light mode,\n    // convert the color to its dark mode equivalent\n    if (darkMode && !noteColor.startsWith('#3') && !noteColor.startsWith('#2') && !noteColor.startsWith('#4')) {\n      return convertColor(noteColor);\n    }\n    // If we're in light mode, and the note was saved in dark mode,\n    // convert the color to its light mode equivalent\n    if (!darkMode && (noteColor.startsWith('#3') || noteColor.startsWith('#2') || noteColor.startsWith('#4'))) {\n      return convertColor(noteColor);\n    }\n    return noteColor;\n  };\n\n  const getBorderStyle = (btnStyle) => {\n    return darkMode ? \n      { borderColor: 'rgba(255, 255, 255, 0.2)' } : \n      { borderColor: 'rgba(0, 0, 0, 0.2)' };\n  };\n\n  const getBtnClass = () => {\n    return darkMode ? \n      \"btn-outline-light\" : \n      \"btn-outline-secondary\";\n  };\n\n  const getModalOverlayStyle = () => {\n    return {\n      backgroundColor: darkMode ? 'rgba(0,0,0,0.7)' : 'rgba(0,0,0,0.5)',\n      zIndex: 1050\n    };\n  };\n\n  const getInputStyle = () => {\n    return darkMode ? {\n      backgroundColor: 'rgba(255, 255, 255, 0.1)',\n      color: '#fff',\n      borderColor: 'rgba(255, 255, 255, 0.2)'\n    } : {};\n  };\n\n  const getEditorStyle = () => {\n    return {\n      minHeight: 150,\n      border: darkMode ? '1px solid rgba(255, 255, 255, 0.2)' : '1px solid #ddd',\n      padding: 10,\n      backgroundColor: darkMode ? '#333' : 'white',\n      color: darkMode ? '#fff' : '#000'\n    };\n  };\n\n  return (\n    <div className={`${theme.card} rounded shadow p-4`}>\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\n        <h2 className=\"h4 fw-semibold\">Your Notes</h2>\n        <button \n          className={`btn ${darkMode ? 'btn-outline-light' : 'btn-primary'} btn-sm d-flex align-items-center`} \n          onClick={() => openNoteEditor()}\n        > \n          <Plus size={16} className=\"me-1\" /> Add Note \n        </button>\n      </div>\n\n      <div className=\"d-flex flex-column gap-3\">\n        {notes.length ? notes.map((note, index) => {\n          const displayColor = getNoteDisplayColor(note.color);\n          return (\n            <div \n              key={index} \n              className=\"p-3 rounded shadow-sm\" \n              style={{ \n                backgroundColor: displayColor,\n                color: getTextColor(displayColor)\n              }}\n            >\n              <div className=\"d-flex justify-content-between\">\n                <div>\n                  <h5 className=\"fw-bold mb-0\">{note.title}</h5>\n                  <p className={`small ${darkMode ? 'text-light' : 'text-muted'} opacity-75`}>{note.date}</p>\n                </div>\n                <div className=\"d-flex gap-2\">\n                  <button \n                    className={`btn btn-sm ${darkMode ? 'btn-dark' : 'btn-light'} shadow-sm`} \n                    onClick={() => openNoteEditor(note, index)}\n                  >\n                    <Edit size={16} />\n                  </button>\n                  <button \n                    className={`btn btn-sm ${darkMode ? 'btn-dark' : 'btn-light'} shadow-sm`} \n                    onClick={() => deleteNote(index)}\n                  >\n                    <X size={16} />\n                  </button>\n                </div>\n              </div>\n              {/* Display only first line of content */}\n              <p className=\"mt-2\">{getFirstLine(note.content)}</p>\n            </div>\n          );\n        }) : (\n          <p className=\"text-center\">No notes yet.</p>\n        )}\n      </div>\n\n      {showModal && (\n        <div \n          className=\"position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center\" \n          style={getModalOverlayStyle()}\n        >\n          <div \n            className=\"rounded p-4 shadow-lg\" \n            style={{ \n              width: '90%', \n              maxWidth: '700px', \n              backgroundColor: selectedColor,\n              color: getTextColor(selectedColor)\n            }} \n            ref={modalRef}\n          >\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n              <h5 className=\"m-0\">Edit Note</h5>\n              <button \n                className={`btn btn-sm ${darkMode ? 'btn-dark' : 'btn-light'} shadow-sm`} \n                onClick={closeEditor}\n              >\n                <X size={16} />\n              </button>\n            </div>\n            <div className=\"mb-3\">\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                value={editedTitle} \n                onChange={(e) => setEditedTitle(e.target.value)} \n                placeholder=\"Note Title\" \n                style={getInputStyle()}\n              />\n            </div>\n            <div className=\"mb-3 d-flex gap-2\">\n              {colorOptions.map(color => (\n                <div \n                  key={color.value} \n                  onClick={() => setSelectedColor(color.value)} \n                  style={{ \n                    backgroundColor: color.value, \n                    width: 30, \n                    height: 30, \n                    borderRadius: '50%', \n                    border: selectedColor === color.value ? \n                      (darkMode ? '2px solid white' : '2px solid black') : \n                      (darkMode ? '1px solid rgba(255,255,255,0.5)' : '1px solid gray'), \n                    cursor: 'pointer',\n                    boxShadow: darkMode ? '0 0 5px rgba(255,255,255,0.2)' : '0 0 5px rgba(0,0,0,0.1)'\n                  }} \n                  title={color.name}\n                />\n              ))}\n            </div>\n            <div className=\"btn-group mb-2\">\n              <button \n                className={`btn btn-sm ${getBtnClass()}`} \n                onClick={() => applyFormatting('bold')}\n                style={getBorderStyle()}\n              >\n                <Bold size={16} />\n              </button>\n              <button \n                className={`btn btn-sm ${getBtnClass()}`} \n                onClick={() => applyFormatting('italic')}\n                style={getBorderStyle()}\n              >\n                <Italic size={16} />\n              </button>\n              <button \n                className={`btn btn-sm ${getBtnClass()}`} \n                onClick={() => applyFormatting('underline')}\n                style={getBorderStyle()}\n              >\n                <Underline size={16} />\n              </button>\n              <button \n                className={`btn btn-sm ${getBtnClass()}`} \n                onClick={() => applyFormatting('insertUnorderedList')}\n                style={getBorderStyle()}\n              >\n                <List size={16} />\n              </button>\n              <button \n                className={`btn btn-sm ${getBtnClass()}`} \n                onClick={() => applyFormatting('justifyLeft')}\n                style={getBorderStyle()}\n              >\n                <AlignLeft size={16} />\n              </button>\n              <button \n                className={`btn btn-sm ${getBtnClass()}`} \n                onClick={() => applyFormatting('justifyCenter')}\n                style={getBorderStyle()}\n              >\n                <AlignCenter size={16} />\n              </button>\n              <button \n                className={`btn btn-sm ${getBtnClass()}`} \n                onClick={() => applyFormatting('justifyRight')}\n                style={getBorderStyle()}\n              >\n                <AlignRight size={16} />\n              </button>\n            </div>\n            <div \n              className=\"form-control notepad-container mb-3\" \n              contentEditable \n              ref={editorRef} \n              style={getEditorStyle()} \n            />\n            <div className=\"d-flex justify-content-end gap-2\">\n              <button \n                className={`btn ${darkMode ? 'btn-dark' : 'btn-secondary'}`} \n                onClick={closeEditor}\n              >\n                Cancel\n              </button>\n              <button \n                className={`btn ${darkMode ? 'btn-light text-dark' : 'btn-primary'}`} \n                onClick={saveNote}\n              >\n                <Save size={16} className=\"me-1\" /> Save\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NotesTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}